/*Question 1
We want to understand more about the movies that families are watching. 
The following categories are considered 
family movies: Animation, Children, Classics, Comedy, Family and Music.*/
--Create a query that lists each movie, the film category it is classified in, and the number of times it has been rented out.

SELECT
  f.title AS film_title,
  c.name AS category_name,
  COUNT(r.rental_id) AS rental_count
FROM category AS c
JOIN film_category AS fc
  ON c.category_id = fc.category_id
JOIN film AS f
  ON fc.film_id = f.film_id
JOIN inventory AS i
  ON f.film_id = i.film_id
JOIN rental AS r
  ON i.inventory_id = r.inventory_id
WHERE c.name IN ('Animation', 'Children', 'Classics', 'Comedy', 'Family', 'Music')
GROUP BY 1,
         2
ORDER BY 2, 1

-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------

/*Question 2
Now we need to know how the length of rental duration of these family-friendly movies 
compares to the duration that all movies are rented for. Can you provide a table with the movie titles and divide
them into 4 levels (first_quarter, second_quarter, third_quarter, and final_quarter) 
based on the quartiles (25%, 50%, 75%) of the rental duration for movies across all categories? 
Make sure to also indicate the category that these family-friendly movies fall into.*/

WITH tb_1
AS (SELECT
  f.title AS film_title,
  c.name AS category_name,
  f.rental_duration AS rental_duration
FROM category AS c
JOIN film_category AS fc
  ON c.category_id = fc.category_id
JOIN film AS f
  ON fc.film_id = f.film_id
JOIN inventory AS i
  ON f.film_id = i.film_id
JOIN rental AS r
  ON i.inventory_id = r.inventory_id)
SELECT
  film_title,
  category_name,
  rental_duration,
  NTILE(4) OVER (ORDER BY rental_duration) AS standard_quartile
FROM tb_1
WHERE category_name IN ('Animation', 'Children', 'Classics', 'Comedy', 'Family', 'Music')

-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------

/*Question 3
Finally, provide a table with the family-friendly film category,
each of the quartiles, and the corresponding count of movies within each combination of film category
for each corresponding rental duration category. The resulting table should have three columns:
Category
Rental length category
Count*/

SELECT
  category_name,
  standard_quartile,
  COUNT(standard_quartile)
FROM (SELECT
  f.title,
  c.name AS category_name,
  f.rental_duration,
  NTILE(4) OVER (ORDER BY f.rental_duration) AS standard_quartile
FROM film_category fc
JOIN category c
  ON c.category_id = fc.category_id
JOIN film f
  ON f.film_id = fc.film_id
WHERE c.name IN ('Animation', 'Children', 'Classics', 'Comedy', 'Family', 'Music')) AS tb
GROUP BY 1,
         2
ORDER BY 1, 2

-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------

/*Question 4
We would like to know who were our top 10 paying customers, how many payments they made on a monthly basis during 2007,
and what was the amount of the monthly payments. Can you write a query to capture the customer name, month and year of payment,
and total payment amount for each month by these top 10 paying customers?*/

SELECT DATE_TRUNC('month', p.payment_date) pay_month, 
       CONCAT(c.first_name , ' ' , c.last_name) AS full_name, 
       COUNT(p.amount) AS pay_countpermon, 
     SUM(p.amount) AS pay_amount
FROM customer c
JOIN payment p
ON p.customer_id = c.customer_id
WHERE CONCAT(c.first_name , ' ' , c.last_name) IN
(SELECT t1.full_name
FROM
(SELECT CONCAT(c.first_name , ' ' , c.last_name) AS full_name, SUM(p.amount) as amount_total
FROM customer c
JOIN payment p
ON p.customer_id = c.customer_id
GROUP BY 1	
ORDER BY 2 DESC
LIMIT 10) t1) AND (p.payment_date BETWEEN '2007-01-01' AND '2008-01-01')
GROUP BY 2, 1
ORDER BY 2, 1, 3